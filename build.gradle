buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    // 2. querydsl plugins 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}


group = 'com.groufin.finpos'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'


    // 3. querydsl dependencies 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'



    //junit
    tasks.named('test') {
        useJUnitPlatform()
    }

    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine' //Junit4제외
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'

}
/* 10-5. querydsl에서 사용할 경로 지정*/

//def querydslDir = "src/main/generated"
def querydslDir = "$buildDir/generated/querydsl"


/* 10-6. JPA사용 여부와 사용할 경로를 지정*/
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

/* 10-7. build시 사용할 SourceSet 추가 */

sourceSets {
    main.java.srcDir querydslDir
}
/* 10-8. querydsl이 complieClasspath를 상속하도록 설정 */

configurations {
    querydsl.extendsFrom compileClasspath
}

/* 10-9. querydsl 컴파일시 사용할 옵션 설정 */
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}


/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
/*def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}*/

tasks.named('test') {
    useJUnitPlatform()
}